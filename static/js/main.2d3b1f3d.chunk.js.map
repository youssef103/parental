{"version":3,"sources":["serviceWorker.ts","utilities/config/text.config.ts","utilities/config/general.ts","store/selector.ts","features/card/Card.reducer.ts","utilities/styles/color.ts","utilities/styles/mediaQuery.ts","utilities/styles/index.ts","common/ui/error/style/Icon.tsx","common/ui/error/style/Text.tsx","common/ui/error/style/index.ts","common/ui/error/index.tsx","common/ui/hint/style/HintText.tsx","common/ui/hint/style/HintIcon.tsx","common/ui/hint/style/index.tsx","common/ui/hint/index.tsx","common/ui/spinner/index.tsx","common/ui/toggle/style/Button.tsx","common/ui/toggle/style/Label.tsx","common/ui/toggle/style/CheckBox.tsx","common/ui/toggle/style/index.tsx","common/ui/toggle/index.tsx","common/ui/label/style/index.tsx","common/ui/label/index.tsx","common/ui/textbox/styles/Input.tsx","common/ui/textbox/styles/index.tsx","common/ui/textbox/index.tsx","common/ui/selectbox/Options.tsx","common/ui/selectbox/styles/Input.tsx","common/ui/selectbox/styles/index.tsx","common/ui/selectbox/index.tsx","utilities/styles/layout/Row.tsx","utilities/styles/layout/Container.tsx","features/app/style/Title.tsx","features/card/style/Body.tsx","features/card/style/Footer.tsx","features/card/style/index.tsx","features/card/Card.container.tsx","features/card/components/Card.component.tsx","features/criterias/Criterias.types.ts","features/criterias/Criterias.reducer.ts","features/criterias/components/DatePicker.component.tsx","features/criterias/components/EmployeeStatus.component.tsx","features/criterias/Criterias.container.tsx","features/criterias/Criterias.action.ts","features/price-base/PriceBase.types.ts","constants/pbb.ts","features/price-base/PriceBase.action.ts","features/price-base/PriceBase.reducer.ts","features/price-base/PriceBase.selector.ts","features/price-base/PriceBase.container.tsx","features/price-base/components/DurationComponent.tsx","features/price-base/components/BasicAmountComponet.tsx","features/salary-info/SalaryInfo.reducer.ts","features/salary-info/SalaryInfo.container.ts","features/salary-info/SalaryInfo.action.ts","features/salary-info/SalaryInfo.types.ts","features/salary-info/components/SalaryInfo.component.tsx","utilities/styles/GlobalStyle.tsx","utilities/config/moment.config.ts","features/app/App.component.tsx","store/rootReducers.ts","features/card/Card.types.ts","store/index.ts","store/middlewares/data-fetching/index.ts","features/card/Card.action.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","salaryModels","value","text","employeeStatus","criteriaText","priceBaseText","salaryInfoText","cardText","sharedMessages","period","minPeriod","minSalary","employedMoreThanOneYear","employedMoreThanThreeYear","errorMessages","notFoundPBB","statusIsRequired","birthdayIsRequired","startDateIsRequired","endDateIsRequired","basicSalaryIsRequired","salaryModelIsRequiredsalary","hintMessages","changePBB","round","decimals","num","Number","Math","getBirthday","state","critera","birthday","getStartDate","priceBase","duration","startDate","getEndDate","endDate","getPBB1","pbb1","getPBB2","pbb2","getCompensationPeriod","compensationPeriod","checkCardDState","cards","loaded","getStatusError","errors","status","getBirthdayError","getCardsData","data","setCardsData","createSelector","salaryInfo","salaryModel","basicSalary","PBB1","PBB2","SalaryModel","BasicSalary","generateCard","pbb","ConvertedBasicSalary","yearlySalary","max10PBB","max15PBB","parentalSalaryUpto10PBB","excessFixedSalary","min","parentalSalaryAbove10PBB","total","getErrors","statusError","birthdayError","sartDateError","endDateError","PBB1Error","PBB2Error","salaryModelError","basicSalaryError","allErrors","errorsFilter","Object","entries","map","err","undefined","push","initialState","primary","secondary","lighten","lightSecondary","danger","darken","white","lightGray","darkGray","minWidth","maxWidth","rangeSize","size","maxSizePhone","minSizeTabletAndUp","minSizeLaptopAndUp","maxSizeTablet","smallSize","mediumSize","customMinWidth","customMaxWidth","customRangeSize","styling","fontFamily","fontSmallSize","fontMedSize","fontBigSize","opacity","Icon","styled","span","colors","Text","bg","StyledError","div","Error","error","props","length","index","key","children","HintText","p","mediaQuery","HintIcon","StyledHint","Hint","hintText","load8","keyframes","Spinner","ToggleButton","isOn","ToggleLabel","label","CheckBox","input","attrs","type","StyledToggle","Button","Label","Toggle","name","handleToggle","checked","onChange","id","htmlFor","LebalWrap","isCenter","labelText","toggleName","toggleState","Input","StyledTextBox","TextBox","rest","Options","select","StyledSelectBox","SelectBox","options","option","Row","reqCol","col","Container","Title","h3","mt","md","color","Body","ul","ListItem","li","Footer","StyledCard","connect","cardData","SET_STATUS","SET_BIRTHDAY","DatePickerComponent","changeDateHandler","useState","focused","setFocused","date","onDateChange","onFocusChange","placeholder","displayFormat","hideKeyboardShortcutsPanel","showDefaultInputIcon","showClearDate","numberOfMonths","isOutsideRange","day","isAfter","moment","isBefore","subtract","EmployeeStatusComponent","changeSalaryHandler","e","target","mapStateToProps","mapStateToDispatch","dispatch","setStatus","EmployeeStatus","Birthday","SET_PBB1","SET_PBB2","SET_END_DATE","PBB","setPBB1","getState","firstYear","year","setPBB2","secondYear","sameYear","isSame","setEndDate","diff","setDuration","isBetween","add","setStartDate","isNaN","countOfDays","getPriceBaseErrors","getYears","years","getCountOfDays","startOf","endOf","countofDaysInDifferentsYears","onPBB1ChangeHandler","onPBB2ChangeHandler","onDatesChanges","Duration","focusedInput","setFocusedInput","startDateId","endDateId","onDatesChange","focusInput","startDatePlaceholderText","endDatePlaceholderText","showClearDates","reopenPickerOnClearDates","innerWidth","BasicAmount","toggleState1","setToggleState1","toggleState2","setToggleState2","disabled","SalaryInfo","basicSalaryValue","basicSalaryChangeHandler","salary","setSalaryModelChangeHandler","setSalaryModel","axis","xstep","xmin","xmax","x","parseInt","toString","styles","track","width","backgroundColor","height","borderRadius","boxShadow","active","thumb","cursor","GlobalStyle","createGlobalStyle","normalize","updateLocale","months","monthsShort","weekdays","weekdaysMin","AppComponent","combineReducers","action","middlewares","thunk","next","includes","setTimeout","loadedCardSuccess","middleWareEnhancer","applyMiddleware","store","createStore","rootReducers","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d3b1f3d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// components data\nexport const salaryModels = [\n  { value: \"\", text: \"Välj din lönemodell\" },\n  { value: \"Rörlig\", text: \"Rörlig\" },\n  { value: \"Stabil\", text: \"Stabil\" }\n];\n\nexport const employeeStatus = [\n  { value: \"\", text: \"Välj värdet från listan\" },\n  { value: \"mer än ett år\", text: \"mer än ett år\" },\n  { value: \"mer än tre år\", text: \"mer än tre år\" }\n];\n\n// Components Text\nexport const criteriaText = {\n  datePickerLabelText: \"Födelse av ditt barn\",\n  employeeStatusLabelText: \"Jag är en sammanhängande anställning på Dynabyte i\"\n};\n\nexport const priceBaseText = {\n  durationLabelText: \"Datum\",\n  durationStartBatePlaceholder: \"Start Datum\",\n  durationEndBatePlaceholder: \"Slut Datum\",\n  basicAmountLabelText: \"Basbelopp för\"\n};\n\nexport const salaryInfoText = {\n  salaryModelLabelText: \"Lönemodell\",\n  baseSalaryLabeText: \"Grundlön\"\n};\n\nexport const cardText = {\n  max10PBB: \"Max 10 PBB 10%:\",\n  max15PBB: \"Max 15 PBB 90%:\",\n  excessFixedSalary: \"Överskjutande fast lön:\",\n  parentalSalaryUpto10PBB: \"Föräldralön upp till 10 PBB:\",\n  parentalSalaryAbove10PBB: \"Föräldralön över 10 PBB:\",\n  total: \"Total föräldralön/mån:\"\n};\n\n// Help and errors messages\nconst sharedMessages = {\n  period:\n    \"Din föräldraledighet måste tas ut inom 24 månader efter barnets födelse eller adoption.\",\n  minPeriod: \"Perioden måste vara mer än 30 dagar.\",\n  minSalary: \"Lönen måste vara minst 30000 kr\",\n  employedMoreThanOneYear:\n    \"Dynabyte ersätter dig med upp till två månaders föräldralön.\",\n  employedMoreThanThreeYear:\n    \"Dynabyte ersätter dig med upp till sex månaders föräldralön.\"\n};\n\nexport const errorMessages = {\n  ...sharedMessages,\n  notFoundPBB: \"Tyvärr kunde inte hitta PBB för \",\n  statusIsRequired: \"Välj värdet från listan.\",\n  birthdayIsRequired: \"Barn födelsedag fält krävs\",\n  startDateIsRequired: \"Start datum är krävs\",\n  endDateIsRequired: \"Slut datum är krävs\",\n  basicSalaryIsRequired: \"Grundlön är krävs\",\n  salaryModelIsRequiredsalary: \"Lönemodell är krävs\"\n};\n\nexport const hintMessages = {\n  ...sharedMessages,\n  employeeStatus: `För att ta del av Dynabytes föräldralönsersättning behöver du ha haft \n  en sammanhängande anställning på Dynabyte i mer än ett år.`,\n  changePBB: \"Du kan redigera PBB genom att aktivera fältet\"\n};\n","export const round = (value: number, decimals: number = 2): number => {\n  let num: any = value + \"e\" + decimals;\n  return Number(Math.round(num) + \"e-\" + decimals);\n};\n","import { createSelector } from \"reselect\";\nimport { AppState } from \".\";\nimport { ICard } from \"../features/card/Card.types\";\nimport { round } from \"../utilities/config\";\n\nexport const getStatus = (state: AppState) => state.critera.status;\n\nexport const getBirthday = (state: AppState) => state.critera.birthday;\n\nexport const getStartDate = (state: AppState) =>\n  state.priceBase.duration.startDate;\n\nexport const getEndDate = (state: AppState) => state.priceBase.duration.endDate;\n\nexport const getPBB1 = (state: AppState) => state.priceBase.pbb1;\nexport const getPBB2 = (state: AppState) => state.priceBase.pbb2;\n\nexport const getSalaryModel = (state: AppState): string =>\n  state.salaryInfo.salaryModel || \"\";\n\nexport const getBasicSalary = (state: AppState): number =>\n  state.salaryInfo.basicSalary || 0;\n\nexport const getCompensationPeriod = (state: AppState) =>\n  state.critera.compensationPeriod;\n\nexport const checkCardDState = (state: AppState): boolean => state.cards.loaded;\n\n// Errors\nexport const getStatusError = (state: AppState) => state.critera.errors.status;\n\nexport const getBirthdayError = (state: AppState) =>\n  state.critera.errors.birthday;\n\nexport const getStartDateError = (state: AppState) =>\n  state.priceBase.errors.startDate;\n\nexport const getEndDateError = (state: AppState) =>\n  state.priceBase.errors.endDate;\n\nexport const getPBB1Error = (state: AppState) => state.priceBase.errors.pbb1;\nexport const getPBB2Error = (state: AppState) => state.priceBase.errors.pbb2;\n\nexport const getSalaryModelError = (state: AppState) =>\n  state.salaryInfo.errors?.salaryModel;\nexport const getBasicSalaryError = (state: AppState) =>\n  state.salaryInfo.errors?.basicSalary;\n\nexport const getCardsData = (state: AppState) => state.cards.data;\n\nexport const setCardsData = createSelector(\n  [getPBB1, getPBB2, getSalaryModel, getBasicSalary],\n  (PBB1, PBB2, SalaryModel, BasicSalary) => {\n    let cards = [];\n    cards[0] = generateCard(PBB1, BasicSalary, SalaryModel);\n\n    if (PBB2 && PBB2 > 0) {\n      cards[1] = generateCard(PBB2, BasicSalary, SalaryModel);\n    }\n\n    return cards;\n  }\n);\n\nconst generateCard = (\n  pbb: number,\n  basicSalary: number,\n  salaryModel: string\n): ICard => {\n  const ConvertedBasicSalary: number =\n    salaryModel === \"Rörlig\" ? round(basicSalary * 1.235) : round(basicSalary);\n\n  const yearlySalary: number = ConvertedBasicSalary * 12;\n  const max10PBB: number = round(pbb * 10);\n  const max15PBB: number = round(pbb * 15);\n\n  const parentalSalaryUpto10PBB =\n    yearlySalary > max10PBB\n      ? round(max10PBB * ((0.1 / 365) * 30))\n      : round(yearlySalary * ((0.1 / 365) * 30));\n\n  const excessFixedSalary: number =\n    yearlySalary > max10PBB\n      ? round(Math.min(yearlySalary, max15PBB) - max10PBB)\n      : 0;\n\n  const parentalSalaryAbove10PBB: number = round(\n    excessFixedSalary * ((0.9 / 365) * 30),\n    2\n  );\n  const total: number =\n    parentalSalaryAbove10PBB <= 0\n      ? parentalSalaryUpto10PBB\n      : round(parentalSalaryUpto10PBB + parentalSalaryAbove10PBB);\n\n  return {\n    ConvertedBasicSalary,\n    max10PBB,\n    max15PBB,\n    excessFixedSalary,\n    parentalSalaryUpto10PBB,\n    parentalSalaryAbove10PBB,\n    total\n  };\n};\n\nexport const getErrors = createSelector(\n  [\n    getStatusError,\n    getBirthdayError,\n    getStartDateError,\n    getEndDateError,\n    getPBB1Error,\n    getPBB2Error,\n    getSalaryModelError,\n    getBasicSalaryError\n  ],\n  (\n    statusError,\n    birthdayError,\n    sartDateError,\n    endDateError,\n    PBB1Error,\n    PBB2Error,\n    salaryModelError,\n    basicSalaryError\n  ) => {\n    const allErrors = {\n      statusError,\n      birthdayError,\n      sartDateError,\n      endDateError,\n      PBB1Error,\n      PBB2Error,\n      salaryModelError,\n      basicSalaryError\n    };\n\n    const errorsFilter: string[] = [];\n    const errorsObj = Object.entries(allErrors);\n    // eslint-disable-next-line\n    errorsObj.map((err: string | any) => {\n      err[1] &&\n        (err[1] !== undefined || err[1] !== \"\") &&\n        errorsFilter.push(err[1]);\n    });\n    return errorsFilter;\n  }\n);\n","import {\n  CardState,\n  LOAD_CARD,\n  LOAD_CARD_SUCCESS,\n  LOAD_CARD_FAILURE,\n  CardActionTypes\n} from \"./Card.types\";\n\nexport const initialState: CardState = {\n  loaded: true,\n  data: []\n};\n\nexport default (state = initialState, action: CardActionTypes): CardState => {\n  switch (action.type) {\n    case LOAD_CARD:\n      return {\n        loaded: false,\n        data: []\n      };\n    case LOAD_CARD_SUCCESS:\n      return {\n        ...state,\n        loaded: true,\n        data: [...action.data]\n      };\n    case LOAD_CARD_FAILURE:\n      return {\n        ...state,\n        loaded: true,\n        data: []\n      };\n\n    default:\n      return state;\n  }\n};\n","import { lighten, darken } from \"polished\";\n\nexport default {\n  text: \"#3C3C3B\",\n  primary: \"#DB3E77\",\n  secondary: lighten(0.15, \"#DB3E77\"),\n  lightSecondary: lighten(0.3, \"#DB3E77\"),\n  danger: darken(0.2, \"#DB3E77\"),\n  white: \"#FFFFFF\",\n  lightGray: \"#f9f8fa\",\n  darkGray: \"#CCCCCC\"\n};\n","const minWidth = (minWidth: number) =>\n  `@media only screen and (min-width: ${minWidth}px)`;\n/*const deviceWidth = (deviceWidth: number) =>\n  `@media only screen and (device-width: ${deviceWidth}px)`;*/\nconst maxWidth = (maxWidth: number) =>\n  `@media only screen and (max-width: ${maxWidth}px)`;\nconst rangeSize = (minWidth: number, maxWidth: number) =>\n  `@media only screen and (min-width: ${minWidth}px) and (max-width: ${maxWidth}px)`;\n\nexport const size = {\n  mobileM: 375,\n  mobileL: 425,\n  tablet: 768,\n  custom: 945,\n  laptop: 1024\n  /*  \n  laptopL: 1440,\n  desktop: 2000,\n  xSmall: 320,\n  small: 576,\n  medium: 768,\n  large: 992,\n  xLarge: 1200 */\n};\n\nexport default {\n  maxSizePhone: maxWidth(size.tablet),\n  minSizeTabletAndUp: minWidth(size.tablet),\n  minSizeLaptopAndUp: minWidth(size.laptop),\n  maxSizeTablet: maxWidth(size.laptop),\n  smallSize: maxWidth(size.mobileM),\n  mediumSize: rangeSize(size.mobileM, size.custom),\n  //bigSize: minWidth(946),\n  customMinWidth: minWidth,\n  customMaxWidth: maxWidth,\n  customRangeSize: rangeSize\n};\n\n/*\nexport default {\n  phone: maxWidth(size.tablet),\n  minSizeTabletAndUp: minWidth(size.tablet),\n  minSizeLaptopAndUp: minWidth(size.laptop),\n  maxSizePhone: maxWidth(size.tablet),\n  maxSizeTablet: maxWidth(size.laptop),\n  maxSizeOfScreen: maxWidth(size.desktop),\n  smallScreen: rangeSize(size.mobileS, size.tablet),\n  mediumScreen: rangeSize(size.tablet, size.laptopL),\n  BigScreen: rangeSize(size.laptop, size.desktop),\n  devicePortrait: rangeSize(\n    size.mobileL,\n    size.large,\n    \"portrait\"\n  ),\n  deviceLandscape: rangeSize(size.mobileL, size.large, \"landscape\"),\n  customMinWidth: minWidth,\n  customMaxWidth: maxWidth,\n  customRangeSize: rangeSize\n};*/\n","import colors from \"./color\";\nimport mediaQuery from \"./mediaQuery\";\n\nconst styling = {\n  typography: {\n    fontFamily: \"'Noto Sans',sans-serif\",\n    fontSmallSize: \"14px\",\n    fontMedSize: \"16px\",\n    fontBigSize: \"20px\"\n  },\n  borderShadow: (opacity: number = 0.15, state: string = \"\") =>\n    `0 2px 4px rgba(0, 0, 0, ${opacity}) ${state}`\n};\n\nexport { styling, colors, mediaQuery };\n","import styled from \"styled-components\";\nimport { colors } from \"../../../../utilities\";\n\nexport const Icon = styled.span`\n  border: 3px solid ${colors.danger};\n  border-radius: 50%;\n  padding: 2px 4px 0;\n  margin-right: 10px;\n  font-size: 12px;\n  align-self: center;\n\n  &::before {\n    content: \"X\";\n    color: ${colors.danger};\n    font-weight: bold;\n  }\n`;\n","import styled from \"styled-components\";\nimport { colors, styling } from \"../../../../utilities\";\nimport { IError } from \"../IError\";\n\nexport const Text = styled.span<IError>`\n  color: ${colors.danger};\n  font-size: ${styling.typography.fontSmallSize};\n  ${({ bg = false }) => (bg ? \"margin-left: 15px\" : \"\")}\n`;\n","import styled from \"styled-components\";\nimport { IError } from \"../IError\";\n\nimport { Icon } from \"./Icon\";\nimport { Text } from \"./Text\";\n\nimport { colors, styling } from \"../../../../utilities\";\n\nconst StyledError: any = styled.div<IError>`\n  margin-top: 10px;\n  margin-bottom: 15px;\n\n  display: flex;\n  align-items: center;\n\n  ${({ bg = false }: IError) =>\n    bg &&\n    `\n      background: ${colors.secondary};\n      border: 3px solid ${colors.primary};\n      padding: 10px 5px;\n      \n      p {\n        font-weight: bold;\n        font-size: ${styling.typography.fontMedSize};\n      }\n    `}\n`;\n\nStyledError.Icon = Icon;\nStyledError.Text = Text;\n\nexport default StyledError;\n","import React from \"react\";\nimport StyledError from \"./style\";\nimport { IError } from \"./IError\";\n\nconst Error: React.FC<IError> = ({ error, bg, ...props }) => {\n  return (\n    <StyledError bg={bg}>\n      <StyledError.Icon />\n      <StyledError.Text>\n        {error}\n        {props.errors && props.errors.length > 0\n          ? props.errors.map((value: string, index: number) => (\n              <p key={index}>{value}</p>\n            ))\n          : props.children}\n      </StyledError.Text>\n    </StyledError>\n  );\n};\n\nexport default Error;\n","import styled from \"styled-components\";\n\nimport { IHint } from \"../IHint\";\nimport { colors, mediaQuery } from \"../../../../utilities\";\n\nexport const HintText = styled.p<IHint>`\n  position: absolute;\n  top: 26px;\n  font-size: 14px;\n  padding: 15px 10px;\n  z-index: 10;\n  display: none;\n  border: 2px solid ${colors.primary};\n  background: ${colors.secondary};\n  color: ${colors.white};\n\n  ${mediaQuery.minSizeLaptopAndUp} {\n    min-width: 36vw;\n    max-width: 48vw;\n  }\n\n  ${mediaQuery.maxSizeTablet} {\n    min-width: 44vw;\n    max-width: 48vw;\n  }\n\n  ${mediaQuery.maxSizePhone} {\n    min-width: 87vw;\n    max-width: 95vw;\n  }\n\n  &::before {\n    content: \"\";\n    width: 0;\n    height: 0;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-bottom: 10px solid ${colors.primary};\n    position: absolute;\n    top: -10px;\n    left: 5px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { HintText } from \"./HintText\";\nimport { colors } from \"../../../../utilities\";\n\nexport const HintIcon = styled.span`\n  background: ${colors.primary};\n  padding: 0 7px;\n  border: 1px solid ${colors.secondary};\n  border-radius: 50%;\n  color: ${colors.white};\n  font-family: serif;\n  font-style: italic;\n  &:hover {\n    background: ${colors.secondary};\n    + ${HintText} {\n      display: block;\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nimport { HintText } from \"./HintText\";\nimport { HintIcon } from \"./HintIcon\";\n\nimport { IHint } from \"../IHint\";\n\nconst StyledHint: any = styled.div<IHint>`\n  position: relative;\n  width: 30px;\n`;\n\nStyledHint.Icon = HintIcon;\nStyledHint.Text = HintText;\n\nexport default StyledHint;\n","import React from \"react\";\nimport StyledHint from \"./style\";\nimport { IHint } from \"./IHint\";\n\nconst Hint: React.FC<IHint> = ({ hintText }) => {\n  return (\n    <StyledHint>\n      <StyledHint.Icon>i</StyledHint.Icon>\n      <StyledHint.Text>{hintText}</StyledHint.Text>\n    </StyledHint>\n  );\n};\n\nexport default Hint;\n","import styled, { keyframes } from \"styled-components\";\nimport { ISpinner } from \"./ISpinner\";\n\nconst load8 = keyframes`\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  \n`;\n\nconst Spinner = styled.div<ISpinner>`\n  margin: 60px auto;\n  font-size: 10px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 1.1em solid rgba(238, 39, 119, 0.2);\n  border-right: 1.1em solid rgba(238, 39, 119, 0.2);\n  border-bottom: 1.1em solid rgba(238, 39, 119, 0.2);\n  border-left: 1.1em solid #ee2777;\n  transform: translateZ(0);\n  animation: ${load8} 1.1s infinite linear;\n\n  border-radius: 50%;\n  width: ${({ size = 10 }) => size}em;\n  height: ${({ size = 10 }) => size}em;\n\n  &:after {\n    border-radius: 50%;\n    width: 10em;\n    height: 10em;\n  }\n`;\n\nexport default Spinner;\n","import styled from \"styled-components\";\nimport { colors } from \"../../../../utilities\";\nimport { IToggle } from \"../IToggle\";\n\nexport const ToggleButton = styled.span<IToggle>`\n  content: \"\";\n  position: absolute;\n  top: -3px;\n  left: 0px;\n  width: 28px;\n  height: 28px;\n  border-radius: 45px;\n  transition: 0.2s;\n  background: ${({ isOn }) => (isOn ? colors.primary : colors.white)};\n  box-shadow: 0 0 2px 0 rgba(10, 10, 10, 0.29);\n  border: 1px solid ${colors.white};\n`;\n","import styled from \"styled-components\";\nimport { ToggleButton } from \"./Button\";\n\nimport { colors } from \"../../../../utilities\";\n\nexport const ToggleLabel: any = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  width: 70px;\n  height: 25px;\n  border-radius: 100px;\n  position: relative;\n  transition: background-color 0.2s;\n  background: ${colors.darkGray};\n  border: 1px solid ${colors.white};\n\n  &:active ${ToggleButton} {\n    width: 60px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { ToggleLabel } from \"./Label\";\nimport { ToggleButton } from \"./Button\";\n\nimport { colors } from \"../../../../utilities\";\n\nexport const CheckBox = styled.input.attrs({ type: \"checkbox\" })`\n  height: 0;\n  width: 0;\n  visibility: hidden;\n  position: absolute;\n\n  &:checked + ${ToggleLabel} {\n    background: ${colors.secondary};\n    ${ToggleButton} {\n      left: 100%; /*calc(100% - 2px);*/\n      transform: translateX(-100%);\n      background: ${colors.primary};\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport { ToggleButton } from \"./Button\";\nimport { CheckBox } from \"./CheckBox\";\nimport { ToggleLabel } from \"./Label\";\n\nconst StyledToggle: any = styled.div`\n  outline: none;\n`;\n\nStyledToggle.CheckBox = CheckBox;\nStyledToggle.Button = ToggleButton;\nStyledToggle.Label = ToggleLabel;\n\nexport default StyledToggle;\n","import React from \"react\";\nimport StyledToggle from \"./style\";\nimport { IToggle } from \"./IToggle\";\n\nconst Toggle: React.FC<IToggle> = ({ name, isOn, handleToggle }) => {\n  return (\n    <StyledToggle isOn={isOn}>\n      <StyledToggle.CheckBox\n        checked={isOn}\n        onChange={handleToggle}\n        id={name}\n        name={name}\n      />\n\n      <StyledToggle.Label htmlFor={name}>\n        <StyledToggle.Button />\n      </StyledToggle.Label>\n    </StyledToggle>\n  );\n};\n\nexport default Toggle;\n","import styled from \"styled-components\";\nimport { mediaQuery } from \"../../../../utilities\";\nimport { ILabelSharedProps } from \"../ILabel\";\n\nconst LebalWrap: any = styled.div<ILabelSharedProps>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 6px;\n  ${({ isCenter }) => (isCenter ? \"text-align:center\" : \"\")}\n\n  ${mediaQuery.minSizeLaptopAndUp} {\n    min-height: 25px;\n  }\n\n  ${mediaQuery.maxSizeTablet} {\n    min-height: 35px;\n  }\n\n  label {\n    flex: 1;\n  }\n`;\n\nexport default LebalWrap;\n","import React from \"react\";\nimport Hint from \"../hint\";\nimport Toggle from \"../toggle\";\n\nimport LabelWrap from \"./style\";\nimport { ILabel, ILabelSharedProps, ILabelToggle } from \"./ILabel\";\n\nexport const Label: React.FC<ILabel & ILabelSharedProps & ILabelToggle> = ({\n  htmlFor,\n  labelText,\n  isCenter,\n  hintText,\n  children,\n  handleToggle,\n  toggleName,\n  toggleState = false\n}) => {\n  return (\n    <LabelWrap isCenter={isCenter}>\n      {hintText && <Hint hintText={hintText} />}\n\n      <label htmlFor={htmlFor}>\n        {labelText}\n        {children}\n      </label>\n\n      {toggleName && (\n        <Toggle\n          isOn={toggleState}\n          name={toggleName}\n          handleToggle={handleToggle}\n        />\n      )}\n    </LabelWrap>\n  );\n};\n","import styled from \"styled-components\";\nimport { ITextBox } from \"../ITextBox\";\nimport { colors } from \"../../../../utilities\";\n\nconst Input = styled.input<ITextBox>`\n  height: 60px;\n  width: 100%;\n  text-align: center;\n  border: 1px solid ${({ error }) => (error ? colors.danger : \"#eeeeee\")};\n  background: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n  outline-color: ${colors.primary};\n\n  &:disabled {\n    background: ${colors.lightGray};\n    color: ${colors.darkGray};\n    cursor: not-allowed;\n  }\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\nimport Input from \"./Input\";\nimport { Label } from \"../../label\";\n\nconst StyledTextBox: any = styled.div`\n  width: 100%;\n`;\n\nStyledTextBox.Label = Label;\nStyledTextBox.Input = Input;\nexport default StyledTextBox;\n","import * as React from \"react\";\nimport { ILabelSharedProps, ILabelToggle } from \"../label/ILabel\";\nimport { ITextBox } from \"./ITextBox\";\n\nimport { Label } from \"../label\";\nimport StyledTextBox from \"./styles\";\nimport Error from \"../error/style\";\n\ntype OnChangeProps = {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string;\n  disabled?: boolean;\n};\n\nconst TextBox: React.FC<ILabelSharedProps &\n  ITextBox &\n  ILabelToggle &\n  OnChangeProps> = ({\n  labelText,\n  hintText,\n  name,\n  error,\n  type = \"text\",\n  ...rest\n}) => (\n  <StyledTextBox>\n    {labelText && (\n      <Label\n        htmlFor={name}\n        labelText={labelText}\n        hintText={hintText}\n        toggleName={rest.toggleName}\n        toggleState={rest.toggleState}\n        handleToggle={rest.handleToggle}\n      />\n    )}\n    <StyledTextBox.Input id={name} name={name} {...rest} error={!!error} />\n    {error && (\n      <Error>\n        <Error.Icon />\n        <Error.Text>{error}</Error.Text>\n      </Error>\n    )}\n  </StyledTextBox>\n);\n\nexport default TextBox;\n","import React from \"react\";\nimport { IOptoinProps } from \"./IOptoinProps\";\n\nexport const Options: React.FC<IOptoinProps> = ({ value, text }) => {\n  return <option value={value}>{text}</option>;\n};\n","import styled from \"styled-components\";\nimport { styling, colors } from \"../../../../utilities\";\n\nconst Input = styled.select`\n  height: 60px;\n  width: 100%;\n  font-size: 1em;\n  text-align-last: center;\n  color: #000000;\n  border: 1px solid #eeeeee;\n  margin-bottom: 10px;\n  font-weight: 400;\n  padding-left: 25px;\n  box-shadow: ${styling.borderShadow()};\n  background: ${colors.white};\n  outline-color: ${colors.primary};\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\nimport Input from \"./Input\";\nimport { Label } from \"../../label\";\n\nconst StyledSelectBox: any = styled.div`\n  width: 100%;\n`;\n\nStyledSelectBox.Label = Label;\nStyledSelectBox.Input = Input;\n\nexport default StyledSelectBox;\n","import React from \"react\";\nimport { Options } from \"./Options\";\n\nimport { ISelectBoxProps } from \"./ISelectBox\";\nimport { IOptoinProps } from \"./IOptoinProps\";\nimport { ILabelSharedProps } from \"../label/ILabel\";\nimport StyledSelectBox from \"./styles\";\nimport Error from \"../error\";\n\ntype c = {\n  value?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const SelectBox: React.FC<ILabelSharedProps & ISelectBoxProps & c> = ({\n  labelText,\n  hintText,\n  name,\n  options,\n  ...rest\n}) => (\n  <StyledSelectBox>\n    {labelText && (\n      <StyledSelectBox.Label\n        htmlFor={name}\n        labelText={labelText}\n        hintText={hintText}\n      />\n    )}\n    <StyledSelectBox.Input name={name} id={name} {...rest}>\n      {options.map((option: IOptoinProps) => (\n        <Options key={option.value} value={option.value} text={option.text} />\n      ))}\n    </StyledSelectBox.Input>\n\n    {rest.error && <Error error={rest.error} />}\n  </StyledSelectBox>\n);\n","import styled from \"styled-components\";\nimport { mediaQuery } from \"../index\";\ninterface IProps {\n  col: number;\n  reqCol?: boolean;\n}\n\nconst Row = styled.div<IProps>`\n  display: grid;\n\n  ${mediaQuery.maxSizePhone} {\n    grid-row-gap: 30px;\n    margin-bottom: 10px;\n\n    ${({ reqCol = false, col }) =>\n      reqCol ? `grid-template-columns: repeat(${col}, 1fr);` : \"\"}\n  }\n\n  ${mediaQuery.minSizeTabletAndUp} {\n    grid-template-columns: repeat(${({ col }) => col}, 1fr);\n    grid-column-gap: 18px;\n    grid-row-gap: 10px;\n  }\n`;\n\nexport default Row;\n","import styled from \"styled-components\";\nimport { mediaQuery } from \"../index\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: 40px;\n  width: 80vw;\n\n  ${mediaQuery.smallSize} {\n    width: 94vw;\n  }\n  ${mediaQuery.mediumSize} {\n    width: 96vw;\n  }\n\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport default Container;\n","import styled from \"styled-components\";\n\ntype IProps = {\n  mt?: null | number;\n  md?: null | number;\n  color?: null | string;\n};\n\nexport const Title = styled.h3<IProps>`\n  ${({ mt = null }) => (mt ? `margin-top: ${mt}px` : \"\")}\n  ${({ md = null }) => (md ? `margin-down: ${md}px` : \"\")}\n  ${({ color = null }) => (color ? `color: ${color}` : \"\")}\n`;\n","import styled from \"styled-components\";\nimport { colors } from \"../../../utilities\";\n\nexport const Body = styled.ul`\n  list-style: none;\n  padding: 15px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px 5px 5px;\n  display: flex;\n  justify-content: space-between;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid #eeeeee;\n  }\n\n  &:hover {\n    background: ${colors.primary};\n    color: ${colors.white};\n  }\n`;\n","import styled from \"styled-components\";\nimport { colors } from \"../../../utilities\";\n\nexport const Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px;\n  font-size: 1.05em;\n  font-weight: bold;\n\n  background: ${colors.primary};\n  color: ${colors.white};\n`;\n","import styled from \"styled-components\";\nimport { styling } from \"../../../utilities\";\n\nimport { Body, ListItem } from \"./Body\";\nimport { Footer } from \"./Footer\";\n\nconst StyledCard: any = styled.div`\n  height: 100%;\n  width: 100%;\n  border: 1px solid #eeeeee;\n  background: #fff;\n  box-shadow: ${styling.borderShadow()};\n  transition: 0.4s;\n\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: ${styling.borderShadow(0.3)};\n  }\n`;\n\nStyledCard.Body = Body;\nStyledCard.ListItem = ListItem;\nStyledCard.Footer = Footer;\n\nexport default StyledCard;\n","import { connect } from \"react-redux\";\n\nimport { IMapCardStateToProps, ICardProps } from \"./Card.types\";\nimport { AppState } from \"../../store\";\nimport {\n  getPBB1,\n  getPBB2,\n  checkCardDState,\n  getErrors,\n  getCompensationPeriod,\n  getCardsData\n} from \"../../store/selector\";\n\nimport { CardComponent } from \"./components\";\n\nconst mapStateToProps = (\n  state: AppState\n): IMapCardStateToProps & ICardProps => ({\n  pbb1: getPBB1(state),\n  pbb2: getPBB2(state),\n  cards: getCardsData(state),\n  loaded: checkCardDState(state),\n  errors: getErrors(state),\n  compensationPeriod: getCompensationPeriod(state)\n});\n\nexport default connect(mapStateToProps, null)(CardComponent);\n","import React from \"react\";\n\nimport { ICard, ICardProps } from \"../Card.types\";\n\nimport { Spinner, Error } from \"../../../common/ui\";\nimport { Row } from \"../../../utilities/styles/layout\";\nimport { Title } from \"../../app/style\";\nimport StyledCard from \"../style\";\n\nimport { cardText, colors } from \"../../../utilities\";\n\nexport const CardComponent: React.FC<ICardProps> = ({\n  cards,\n  errors,\n  loaded,\n  compensationPeriod\n}) => {\n  if (!loaded) return <Spinner size={5} />;\n  if (errors && errors.length > 0 && loaded)\n    return <Error errors={errors} bg />;\n\n  return (\n    <>\n      {cards && cards.length > 0 && compensationPeriod && (\n        <Title md={5} color={colors.primary}>\n          {compensationPeriod}\n        </Title>\n      )}\n      <Row col={cards && cards.length === 2 ? 2 : 1}>\n        {cards &&\n          cards.map((cardData: ICard, index: number) => (\n            <StyledCard key={index}>\n              <StyledCard.Body>\n                <StyledCard.ListItem>\n                  <span>{cardText.max10PBB}</span>\n                  <span>{cardData.max10PBB}</span>\n                </StyledCard.ListItem>\n\n                <StyledCard.ListItem>\n                  <span>{cardText.max15PBB}</span>\n                  <span>{cardData.max15PBB}</span>\n                </StyledCard.ListItem>\n\n                <StyledCard.ListItem>\n                  <span>{cardText.excessFixedSalary}</span>\n                  <span>{cardData.excessFixedSalary}</span>\n                </StyledCard.ListItem>\n\n                <StyledCard.ListItem>\n                  <span>{cardText.parentalSalaryUpto10PBB}</span>\n                  <span>{cardData.parentalSalaryUpto10PBB}</span>\n                </StyledCard.ListItem>\n\n                <StyledCard.ListItem>\n                  <span>{cardText.parentalSalaryAbove10PBB}</span>\n                  <span>{cardData.parentalSalaryAbove10PBB}</span>\n                </StyledCard.ListItem>\n              </StyledCard.Body>\n\n              <StyledCard.Footer>\n                <span>{cardText.total}</span>\n                <span>{cardData.total} kr</span>\n              </StyledCard.Footer>\n            </StyledCard>\n          ))}\n      </Row>\n    </>\n  );\n};\n","import { Action } from \"redux\";\nimport moment from \"moment\";\n\nexport const SET_STATUS = \"[CRITERIAS] SET_STATUS\";\nexport const SET_BIRTHDAY = \"[CRITERIAS] SET_BIRTHDAY\";\nexport const SET_STATUS_ERROR = \"[CRITERIAS] SET_STATUS_ERROR\";\nexport const SET_BIRTHDAY_ERROR = \"[CRITERIAS] SET_BIRTHDAY_ERROR\";\n\nexport type dateType = moment.Moment | null;\n\nexport interface CriteriaState {\n  readonly birthday?: dateType;\n  readonly status?: string;\n  readonly compensationPeriod: string;\n  readonly errors: {\n    readonly birthday?: string;\n    readonly status?: string;\n  };\n}\n\nexport interface DatePickerProps {\n  readonly birthday: dateType;\n  readonly changeDateHandler: (date: dateType) => void;\n  readonly error?: string;\n}\n\nexport interface EmployeeStatusProps {\n  readonly changeSalaryHandler: (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  readonly error?: string;\n}\n\nexport type IMapStateToProps = {\n  birthday?: dateType;\n  statusError?: string;\n  birthdayError?: string;\n};\n\nexport type IMapDispatchProps = {\n  changeSalaryHandler?: (status: string) => void;\n  changeDateHandler?: (date: dateType) => void;\n};\n\ninterface setStatusAction extends Action {\n  readonly type: typeof SET_STATUS;\n  readonly status: string;\n  readonly compensationPeriod: string;\n  readonly error: string;\n}\n\ninterface setChildBirthdayAction extends Action {\n  readonly type: typeof SET_BIRTHDAY;\n  readonly birthday: dateType;\n  readonly error: string;\n}\n\nexport type CriteriaActionTypes = setChildBirthdayAction | setStatusAction;\n","import {\n  CriteriaState,\n  SET_STATUS,\n  CriteriaActionTypes,\n  SET_BIRTHDAY\n} from \"./Criterias.types\";\n\nconst initialState: CriteriaState = {\n  birthday: null,\n  status: \"\",\n  compensationPeriod: \"\",\n  errors: {}\n};\n\nexport default (\n  state = initialState,\n  action: CriteriaActionTypes\n): CriteriaState => {\n  switch (action.type) {\n    case SET_BIRTHDAY:\n      return {\n        ...state,\n        birthday: action.birthday,\n        errors: { ...state.errors, birthday: action.error }\n      };\n\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status,\n        compensationPeriod: action.compensationPeriod,\n        errors: { ...state.errors, status: action.error }\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { SingleDatePicker } from \"react-dates\";\n\nimport { Label, Error } from \"../../../common/ui\";\nimport { DatePickerProps } from \"../Criterias.types\";\nimport { hintMessages, criteriaText } from \"../../../utilities/config\";\n\nconst DatePickerComponent: React.FC<DatePickerProps & any> = ({\n  birthdayError,\n  birthday,\n  changeDateHandler\n}) => {\n  const [focused, setFocused] = useState(false);\n\n  return (\n    <div>\n      <Label\n        htmlFor=\"child-birthday\"\n        hintText={hintMessages.period}\n        labelText={criteriaText.datePickerLabelText}\n      />\n      <SingleDatePicker\n        date={birthday} // momentPropTypes.momentObj or null\n        onDateChange={changeDateHandler} // PropTypes.func.isRequired\n        focused={focused} // PropTypes.bool\n        onFocusChange={() => setFocused(!focused)} // PropTypes.func.isRequired\n        id=\"child-birthday\" // PropTypes.string.isRequired,\n        placeholder=\"Datum\"\n        displayFormat=\"YYYY-MM-DD\"\n        hideKeyboardShortcutsPanel={true}\n        showDefaultInputIcon\n        showClearDate\n        numberOfMonths={1}\n        isOutsideRange={day =>\n          day.isAfter(moment()) || day.isBefore(moment().subtract(2, \"years\"))\n        }\n      />\n      {birthdayError && <Error error={birthdayError} />}\n    </div>\n  );\n};\n\nexport default DatePickerComponent;\n","import React from \"react\";\nimport { SelectBox } from \"../../../common/ui\";\n\nimport { EmployeeStatusProps } from \"../Criterias.types\";\nimport {\n  employeeStatus,\n  hintMessages,\n  criteriaText\n} from \"../../../utilities/config/text.config\";\n\nconst EmployeeStatusComponent: React.FC<EmployeeStatusProps & any> = ({\n  changeSalaryHandler,\n  ...props\n}) => {\n  return (\n    <SelectBox\n      name=\"salary-type\"\n      options={employeeStatus}\n      labelText={criteriaText.employeeStatusLabelText}\n      hintText={hintMessages.employeeStatus}\n      onChange={e => changeSalaryHandler(e.target.value)}\n      error={props.statusError}\n    />\n  );\n};\n\nexport default EmployeeStatusComponent;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { EmployeeStatusComponent, DatePickerComponent } from \"./components\";\n\nimport { AppState } from \"../../store\";\nimport { setStatus, setBirtDate } from \"./Criterias.action\";\n\nimport {\n  CriteriaActionTypes,\n  IMapStateToProps,\n  IMapDispatchProps,\n  dateType\n} from \"./Criterias.types\";\n\nimport {\n  getBirthday,\n  getStatusError,\n  getBirthdayError\n} from \"../../store/selector\";\n\nconst mapStateToProps = (state: AppState): IMapStateToProps => ({\n  birthday: getBirthday(state),\n  statusError: getStatusError(state),\n  birthdayError: getBirthdayError(state)\n});\n\nconst mapStateToDispatch = (\n  dispatch: ThunkDispatch<AppState, any, CriteriaActionTypes>\n): IMapDispatchProps => ({\n  changeSalaryHandler: (status: string) => dispatch(setStatus(status)),\n  changeDateHandler: (date: dateType) => dispatch(setBirtDate(date))\n});\n\nexport default {\n  EmployeeStatus: connect(\n    mapStateToProps,\n    mapStateToDispatch\n  )(EmployeeStatusComponent),\n  Birthday: connect(mapStateToProps, mapStateToDispatch)(DatePickerComponent)\n};\n","import { ThunkActionType, ThunkDispatchType } from \"../../store\";\nimport { SET_BIRTHDAY, SET_STATUS } from \"./Criterias.types\";\nimport { errorMessages, hintMessages } from \"../../utilities/config\";\nimport moment from \"moment\";\n\nexport const setBirtDate = (\n  birthday: moment.Moment | null\n): ThunkActionType => (dispatch: ThunkDispatchType): void => {\n  dispatch({\n    type: SET_BIRTHDAY,\n    birthday,\n    error: birthday === null ? errorMessages.birthdayIsRequired : \"\"\n  });\n};\n\nexport const setStatus = (status: string): ThunkActionType => (\n  dispatch: ThunkDispatchType\n): void => {\n  const compensationPeriod =\n    status === \"mer än ett år\"\n      ? hintMessages.employedMoreThanOneYear\n      : \"\" || status === \"mer än tre år\"\n      ? hintMessages.employedMoreThanThreeYear\n      : \"\";\n\n  dispatch({\n    type: SET_STATUS,\n    status,\n    error: status === \"\" ? errorMessages.statusIsRequired : \"\",\n    compensationPeriod\n  });\n};\n","import { Action } from \"redux\";\nimport moment from \"moment\";\n\nexport const SET_PBB1 = \"[PRICE_BASE] SET_PBB1\";\nexport const SET_PBB2 = \"[PRICE_BASE] SET_PBB2\";\nexport const SET_START_DATE = \"[PRICE_BASE] SET_START_DATE\";\nexport const SET_END_DATE = \"[PRICE_BASE] SET_END_DATE\";\n\nexport type IDuration = {\n  readonly startDate?: moment.Moment | string | null;\n  readonly endDate?: moment.Moment | string | null;\n  readonly birthday?: moment.Moment | string | null;\n  readonly countOfDays?: string | undefined;\n  readonly error?: { startDate: string; endDate: string } | string;\n};\n\nexport interface IMapDurationStateToDispatch {\n  onDatesChanges?: (startDate: any, endDate: any) => void;\n}\n\nexport interface IBasicAmount {\n  year?: string;\n  value: string;\n  error: string;\n  onChange: (pbb: string) => void;\n}\n\nexport interface IBasicAmountConnectedComponent {\n  year?: number | undefined;\n  value?: number | undefined;\n  onChange?: (pbb: number) => void;\n}\n\nexport interface IMapBasicAmountToState {\n  readonly pbb1: number | undefined;\n  readonly pbb2: number | undefined;\n  readonly years: number[];\n}\n\nexport interface IMapBasicAmountToDispatch {\n  onPBB1ChangeHandler: (pbb1: number) => void;\n  onPBB2ChangeHandler: (pbb2: number) => void;\n}\nexport interface IPriceBaseError {\n  errors: {\n    readonly pbb1: string;\n    readonly pbb2: string;\n    readonly startDate?: string;\n    readonly endDate?: string;\n  };\n}\n\nexport type IMapPriceBaseStateToProps = IDuration &\n  IMapBasicAmountToState &\n  IPriceBaseError;\n/*{\n  readonly errors: IPriceBaseError;\n}*/\n\nexport type IMapPriceBaseStateToDispatch = IMapBasicAmountToDispatch &\n  IMapDurationStateToDispatch;\nexport interface IPriceBase {\n  readonly pbb1: number;\n  readonly pbb2: number | undefined;\n  readonly duration: IDuration;\n  readonly errors: {\n    readonly pbb1: string;\n    readonly pbb2: string;\n    readonly startDate?: string;\n    readonly endDate?: string;\n  };\n}\n\ninterface setPBB1Action extends Action {\n  type: typeof SET_PBB1;\n  pbb1: number;\n  error: string;\n}\n\ninterface setPBB2Action extends Action {\n  type: typeof SET_PBB2;\n  pbb2: number | undefined;\n  error: string;\n}\n\ninterface setStartDateAction extends Action {\n  type: typeof SET_START_DATE;\n  startDate?: null | string;\n  error: string;\n}\n\ninterface setEndDateAction extends Action {\n  type: typeof SET_END_DATE;\n  endDate?: null | string;\n  error: string;\n}\n\nexport type PriceBaseActionTypes =\n  | setStartDateAction\n  | setEndDateAction\n  | setPBB1Action\n  | setPBB2Action;\n","export const PBB: { [key: string]: number } = {\n  \"2020\": 47300,\n  \"2019\": 46500,\n  \"2018\": 45500,\n  \"2017\": 44800\n};\n","import moment from \"moment\";\n\nimport { ThunkActionType, ThunkDispatchType, AppState } from \"../../store\";\nimport {\n  SET_PBB1,\n  SET_PBB2,\n  SET_START_DATE,\n  SET_END_DATE\n} from \"./PriceBase.types\";\nimport { PBB } from \"../../constants/pbb\";\nimport { errorMessages } from \"../../utilities/config\";\n\nexport const setPBB1 = (pbb1: number): ThunkActionType => (\n  dispatch: ThunkDispatchType,\n  getState: () => AppState\n): void => {\n  const { startDate }: any = getState().priceBase.duration;\n  const firstYear = moment(startDate).year();\n\n  dispatch({\n    type: SET_PBB1,\n    pbb1,\n    error: !pbb1 ? `${errorMessages.notFoundPBB} ${firstYear}` : \"\"\n  });\n};\n\nexport const setPBB2 = (pbb2: number | undefined): ThunkActionType => (\n  dispatch: ThunkDispatchType,\n  getState: () => AppState\n): void => {\n  const { startDate, endDate }: any = getState().priceBase.duration;\n  const secondYear = moment(endDate).year();\n  const sameYear: boolean = moment(startDate).isSame(endDate, \"year\");\n\n  let error =\n    !pbb2 && startDate && endDate && !sameYear\n      ? `${errorMessages.notFoundPBB} ${secondYear}`\n      : \"\";\n\n  dispatch({\n    type: SET_PBB2,\n    pbb2,\n    error\n  });\n};\n\nconst setStartDate = (startDate: string): ThunkActionType => (\n  dispatch: ThunkDispatchType,\n  getState: () => AppState\n): void => {\n  let birthday: any = getState().critera.birthday;\n  let error = moment(startDate).isBetween(\n    moment(birthday),\n    moment(birthday)\n      .add(2, \"years\")\n      .subtract(29, \"days\") &&\n      birthday &&\n      startDate\n  )\n    ? errorMessages.period\n    : \"\" || !startDate\n    ? errorMessages.startDateIsRequired\n    : \"\";\n\n  dispatch({\n    type: SET_START_DATE,\n    startDate,\n    error\n  });\n};\n\nconst setEndDate = (endDate: string): ThunkActionType => (\n  dispatch: ThunkDispatchType,\n  getState: () => AppState\n): void => {\n  let startDate: any = getState().priceBase.duration.startDate;\n  let error = !endDate\n    ? errorMessages.endDateIsRequired\n    : \"\" || moment(endDate).diff(startDate, \"days\") <= 29\n    ? errorMessages.minPeriod\n    : \"\";\n\n  dispatch({\n    type: SET_END_DATE,\n    endDate,\n    error\n  });\n};\n\nexport const setDuration = (\n  startDate: string,\n  endDate: string\n): ThunkActionType => (dispatch: ThunkDispatchType) => {\n  const firstYear: number = moment(startDate).year();\n  const secondYear: number = moment(endDate).year();\n  const sameYear: boolean = moment(startDate).isSame(endDate, \"year\");\n\n  dispatch(setStartDate(startDate));\n\n  if ((!startDate && !endDate) || sameYear) {\n    dispatch(setEndDate(endDate));\n    dispatch(setPBB2(undefined));\n  }\n\n  if (!isNaN(firstYear) && startDate) {\n    dispatch(setPBB1(PBB[firstYear] || 0));\n  }\n\n  if (endDate) {\n    dispatch(setEndDate(endDate));\n\n    if (!sameYear && !isNaN(firstYear) && !isNaN(secondYear)) {\n      dispatch(setPBB2(PBB[secondYear]));\n    }\n  }\n};\n","import moment from \"moment\";\nimport { PBB } from \"../../constants\";\nimport {\n  PriceBaseActionTypes,\n  SET_PBB1,\n  SET_PBB2,\n  IPriceBase,\n  SET_START_DATE,\n  SET_END_DATE\n} from \"./PriceBase.types\";\n\nconst initialState: IPriceBase = {\n  pbb1: PBB[moment().year()],\n  pbb2: undefined,\n  duration: {\n    startDate: null,\n    endDate: null,\n    countOfDays: undefined\n  },\n  errors: {\n    startDate: \"\",\n    endDate: \"\",\n    pbb1: \"\",\n    pbb2: \"\"\n  }\n};\n\nexport default (\n  state = initialState,\n  action: PriceBaseActionTypes\n): IPriceBase => {\n  switch (action.type) {\n    case SET_PBB1:\n      return {\n        ...state,\n        pbb1: action.pbb1,\n        //pbb2: 0,\n        errors: { ...state.errors, pbb1: action.error }\n      };\n\n    case SET_PBB2:\n      return {\n        ...state,\n        pbb2: action.pbb2,\n        errors: { ...state.errors, pbb2: action.error }\n      };\n\n    case SET_START_DATE:\n      return {\n        ...state,\n        duration: {\n          ...state.duration,\n          startDate: action.startDate\n        },\n        errors: {\n          ...state.errors,\n          startDate: action.error\n        }\n      };\n    case SET_END_DATE:\n      return {\n        ...state,\n        duration: {\n          ...state.duration,\n          endDate: action.endDate\n        },\n        errors: {\n          ...state.errors,\n          endDate: action.error\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import moment from \"moment\";\nimport { AppState } from \"../../store\";\n\nexport const getPriceBaseErrors = (state: AppState) => state.priceBase.errors;\n\nexport const getYears = (state: AppState) => {\n  let { startDate = moment().year(), endDate }: any = state.priceBase.duration;\n\n  const firstYear: null | number = moment(startDate).year() || moment().year();\n  const secondYear: null | number = moment(endDate).year();\n  const sameYear: boolean = moment(startDate).isSame(endDate, \"year\");\n\n  let years = [firstYear];\n  if (!sameYear && secondYear) {\n    years[1] = secondYear;\n  }\n  return years;\n};\n\nexport const getCountOfDays = (state: AppState) => {\n  const { startDate, endDate }: any = state.priceBase.duration;\n\n  const firstYear: null | number = moment(startDate).year();\n  const secondYear: null | number = moment(endDate).year();\n  const sameYear: boolean = moment(startDate).isSame(endDate, \"year\");\n\n  const startOf = moment(startDate).endOf(\"year\");\n  const endOf = moment(endDate).startOf(\"year\");\n\n  const countOfDays: number =\n    startDate && endDate && endDate.diff(startDate, \"days\");\n\n  const countofDaysInDifferentsYears =\n    startDate && endDate && !sameYear\n      ? `( ${startOf.diff(startDate, \"days\") +\n          1} dagar i ${firstYear} och ${moment(endDate).diff(\n          endOf,\n          \"days\"\n        )} dagar i ${secondYear} )`\n      : \"\";\n\n  return countOfDays === 1\n    ? countOfDays + \" Dag\"\n    : undefined || countOfDays > 1\n    ? `${countOfDays} Dagar ${countofDaysInDifferentsYears}`\n    : undefined;\n};\n","import { ThunkDispatch } from \"redux-thunk\";\nimport { connect } from \"react-redux\";\n\nimport { AppState, AppActions } from \"../../store\";\nimport { setPBB1, setPBB2, setDuration } from \"./PriceBase.action\";\n\nimport { Duration, BasicAmount } from \"./components\";\n\nimport {\n  IMapPriceBaseStateToDispatch,\n  IMapPriceBaseStateToProps\n} from \"./PriceBase.types\";\n\nimport {\n  getStartDate,\n  getEndDate,\n  getPBB1,\n  getPBB2,\n  getBirthday\n} from \"../../store/selector\";\n\nimport {\n  getYears,\n  getCountOfDays,\n  getPriceBaseErrors\n} from \"./PriceBase.selector\";\n\nconst mapStateToProps = (state: AppState): IMapPriceBaseStateToProps => ({\n  birthday: getBirthday(state),\n  startDate: getStartDate(state),\n  endDate: getEndDate(state),\n  years: getYears(state),\n  pbb1: getPBB1(state),\n  pbb2: getPBB2(state),\n  countOfDays: getCountOfDays(state),\n  errors: getPriceBaseErrors(state)\n});\n\nconst mapStateToDispatch = (\n  dispatch: ThunkDispatch<AppState, any, AppActions>\n): IMapPriceBaseStateToDispatch => ({\n  onPBB1ChangeHandler: pbb1 => dispatch(setPBB1(pbb1)),\n  onPBB2ChangeHandler: pbb2 => dispatch(setPBB2(pbb2)),\n  onDatesChanges: (startDate, endDate) =>\n    dispatch(setDuration(startDate, endDate))\n});\n\nexport default {\n  Duration: connect(mapStateToProps, mapStateToDispatch)(Duration),\n  BasicAmount: connect(mapStateToProps, mapStateToDispatch)(BasicAmount)\n};\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { DateRangePicker } from \"react-dates\";\nimport { IDuration, IMapDurationStateToDispatch } from \"../PriceBase.types\";\n\nimport { Row } from \"../../../utilities/styles/layout\";\nimport { Label, Error } from \"../../../common/ui\";\n\nimport { hintMessages, priceBaseText } from \"../../../utilities/config\";\n\nexport const Duration: React.FC<IDuration &\n  IMapDurationStateToDispatch &\n  any> = ({\n  birthday,\n  startDate,\n  endDate,\n  countOfDays,\n  onDatesChanges,\n  errors\n}) => {\n  const [focusedInput, setFocusedInput] = useState<\n    \"startDate\" | \"endDate\" | null\n  >(null);\n\n  return (\n    <div>\n      <Label\n        htmlFor=\"startDate\"\n        labelText={priceBaseText.durationLabelText}\n        hintText={hintMessages.minPeriod}\n      />\n\n      <DateRangePicker\n        startDate={startDate} // momentPropTypes.momentObj or null,\n        startDateId=\"startDate\" // PropTypes.string.isRequired,\n        endDate={endDate} // momentPropTypes.momentObj or null,\n        endDateId=\"endDate\" // PropTypes.string.isRequired,\n        onDatesChange={({ startDate, endDate }) =>\n          onDatesChanges(startDate, endDate)\n        }\n        focusedInput={focusedInput}\n        onFocusChange={focusInput => setFocusedInput(focusInput)}\n        //numberOfMonths={1}\n        isOutsideRange={day =>\n          day.isBefore(moment(birthday)) ||\n          day.isAfter(moment(birthday).add(2, \"years\"))\n        }\n        showDefaultInputIcon\n        displayFormat=\"YYYY-MM-DD\"\n        startDatePlaceholderText={priceBaseText.durationStartBatePlaceholder}\n        endDatePlaceholderText={priceBaseText.durationEndBatePlaceholder}\n        //onClose={onClose}\n        hideKeyboardShortcutsPanel={true}\n        showClearDates\n        reopenPickerOnClearDates\n        numberOfMonths={window.innerWidth >= 768 ? 2 : 1}\n        //regular\n        //block\n      />\n      <Row col={2} reqCol={errors.startDate !== \"\" && errors.endDate !== \"\"}>\n        {errors && errors.startDate && <Error error={errors.startDate} />}\n        {errors && errors.endDate && <Error error={errors.endDate} />}\n      </Row>\n      {countOfDays && <Label labelText={countOfDays} isCenter />}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport TextBox from \"../../../common/ui/textbox\";\n\nimport { IBasicAmount } from \"../PriceBase.types\";\nimport { hintMessages, priceBaseText } from \"../../../utilities/config\";\nimport { Row } from \"../../../utilities/styles/layout\";\n\nexport const BasicAmount: React.FC<IBasicAmount & any> = props => {\n  const [toggleState1, setToggleState1] = useState(false);\n  const [toggleState2, setToggleState2] = useState(false);\n  const {\n    years,\n    pbb1,\n    pbb2,\n    onPBB1ChangeHandler,\n    onPBB2ChangeHandler,\n    errors\n  } = props;\n\n  return (\n    <Row col={years.length === 2 && years[1] ? 2 : 1}>\n      <TextBox\n        disabled={!toggleState1}\n        labelText={`${priceBaseText.basicAmountLabelText} ${years[0]}`}\n        name={`basic-amount-${years[0]}`}\n        value={pbb1}\n        onChange={e => onPBB1ChangeHandler(e.target.value)}\n        hintText={hintMessages.changePBB}\n        toggleName={`basic-amount-${years[0]}`}\n        toggleState={toggleState1}\n        handleToggle={() => setToggleState1(!toggleState1)}\n        error={errors && errors.pbb1}\n      />\n\n      {years.length === 2 && years[1] && (\n        <TextBox\n          disabled={!toggleState2}\n          labelText={`${priceBaseText.basicAmountLabelText} ${years[1]}`}\n          name={`basic-amount-${years[1]}`}\n          value={pbb2}\n          onChange={e => onPBB2ChangeHandler(e.target.value)}\n          hintText={hintMessages.changePBB}\n          toggleName={`basic-amount-${years[1]}`}\n          toggleState={toggleState2}\n          handleToggle={() => setToggleState2(!toggleState2)}\n          error={errors && errors.pbb2}\n        />\n      )}\n    </Row>\n  );\n};\n","import {\n  SalaryInfoActionTypes,\n  SET_SALARY_MODEL,\n  SET_BASIC_SALARY,\n  ISalaryInfo\n} from \"./SalaryInfo.types\";\n\nconst initialState: ISalaryInfo = {\n  basicSalary: 30000,\n  salaryModel: \"\",\n  errors: {\n    basicSalary: \"\",\n    salaryModel: \"\"\n  }\n};\n\nexport default (\n  state = initialState,\n  action: SalaryInfoActionTypes\n): ISalaryInfo => {\n  switch (action.type) {\n    case SET_BASIC_SALARY:\n      return {\n        ...state,\n        basicSalary: action.basicSalary,\n        errors: {\n          ...state.errors,\n          basicSalary: action.error\n        }\n      };\n    case SET_SALARY_MODEL:\n      return {\n        ...state,\n        salaryModel: action.salaryModel,\n        errors: { ...state.errors, salaryModel: action.error }\n      };\n    default:\n      return state;\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { SalaryInfoComponent } from \"./components/SalaryInfo.component\";\nimport { AppState, AppActions } from \"../../store\";\nimport { setSalaryModel, setBasicSalary } from \"./SalaryInfo.action\";\nimport {\n  IMapSalaryInfoStateToDispatch,\n  IMapSalaryInfoStateToProps\n} from \"./SalaryInfo.types\";\n\nconst mapStateToProps = (state: AppState): IMapSalaryInfoStateToProps => ({\n  basicSalaryValue: state.salaryInfo.basicSalary,\n  salaryModels: state.salaryInfo.salaryModel,\n  errors: {\n    salaryModel: state.salaryInfo.errors?.salaryModel,\n    basicSalary: state.salaryInfo.errors?.basicSalary\n  }\n});\n\nconst mapStateToDispatch = (\n  dispatch: ThunkDispatch<AppState, any, AppActions>\n): IMapSalaryInfoStateToDispatch => ({\n  basicSalaryChangeHandler: salary => dispatch(setBasicSalary(salary)),\n  setSalaryModelChangeHandler: salaryModel =>\n    dispatch(setSalaryModel(salaryModel))\n});\n\nconst SalaryInfo = connect(\n  mapStateToProps,\n  mapStateToDispatch\n)(SalaryInfoComponent);\n\nexport default SalaryInfo;\n","import { SET_BASIC_SALARY, SET_SALARY_MODEL } from \"./SalaryInfo.types\";\nimport { AppState, ThunkActionType, ThunkDispatchType } from \"../../store\";\nimport { errorMessages } from \"../../utilities/config\";\n\nexport const setBasicSalary = (basicSalary: number): ThunkActionType => (\n  dispatch: ThunkDispatchType\n) => {\n  return dispatch({\n    type: SET_BASIC_SALARY,\n    basicSalary,\n    error: isNaN(basicSalary)\n      ? errorMessages.basicSalaryIsRequired\n      : \"\" || basicSalary < 30000\n      ? errorMessages.minSalary\n      : \"\"\n  });\n};\n\nexport const setSalaryModel = (salaryModel: string): ThunkActionType => (\n  dispatch: ThunkDispatchType,\n  getState: () => AppState\n) => {\n  return dispatch({\n    type: SET_SALARY_MODEL,\n    salaryModel,\n    error: salaryModel === \"\" ? errorMessages.salaryModelIsRequiredsalary : \"\"\n  });\n};\n","import { Action } from \"redux\";\n\nexport const SET_BASIC_SALARY = \"[SALARY_INFO] SET_BASIC_SALARY\";\nexport const SET_SALARY_MODEL = \"[SALARY_INFO] SET_SALARY_MODEL\";\n\nexport interface ISalaryInfoError {\n  salaryModel?: string;\n  basicSalary?: string;\n}\n\nexport interface ISalaryInfo {\n  readonly salaryModel?: string;\n  readonly basicSalary?: number;\n  readonly errors?: ISalaryInfoError;\n}\n\nexport interface IMapSalaryInfoStateToDispatch {\n  basicSalaryChangeHandler: (salary: number) => void;\n  setSalaryModelChangeHandler: (salaryModel: string) => void;\n}\n\nexport interface IMapSalaryInfoStateToProps {\n  basicSalaryValue?: number | undefined;\n  salaryModels?: string | undefined;\n  errors?: ISalaryInfoError;\n}\n\ninterface setBasicSalaryAction extends Action {\n  type: typeof SET_BASIC_SALARY;\n  basicSalary: number;\n  error: string;\n}\n\ninterface setSalaryModelAction extends Action {\n  type: typeof SET_SALARY_MODEL;\n  salaryModel: string;\n  error: string;\n}\n\nexport type SalaryInfoActionTypes = setBasicSalaryAction | setSalaryModelAction;\n","import React from \"react\";\nimport Slider from \"react-input-slider\";\n\nimport {\n  ISalaryInfo,\n  IMapSalaryInfoStateToProps,\n  IMapSalaryInfoStateToDispatch\n} from \"../SalaryInfo.types\";\n\nimport { SelectBox, TextBox } from \"../../../common/ui\";\nimport { Row } from \"../../../utilities/styles/layout\";\n\nimport {\n  colors,\n  styling,\n  salaryModels,\n  hintMessages,\n  salaryInfoText\n} from \"../../../utilities\";\n\nexport const SalaryInfoComponent: React.FC<ISalaryInfo &\n  IMapSalaryInfoStateToProps &\n  IMapSalaryInfoStateToDispatch &\n  any> = props => {\n  const {\n    errors,\n    basicSalaryValue,\n    basicSalaryChangeHandler,\n    setSalaryModelChangeHandler\n  } = props;\n\n  return (\n    <>\n      <Row col={2}>\n        <SelectBox\n          name=\"salary-type\"\n          options={salaryModels}\n          labelText={salaryInfoText.salaryModelLabelText}\n          onChange={e => setSalaryModelChangeHandler(e.target.value)}\n          error={errors.salaryModel}\n        />\n\n        <TextBox\n          labelText={salaryInfoText.baseSalaryLabeText}\n          name=\"baseSalary\"\n          value={basicSalaryValue}\n          onChange={e => basicSalaryChangeHandler(e.target.value)}\n          hintText={hintMessages.minSalary}\n          error={errors.basicSalary}\n        />\n      </Row>\n      <Slider\n        axis=\"x\"\n        xstep={50}\n        xmin={0}\n        xmax={100000}\n        x={parseInt(basicSalaryValue)}\n        onChange={({ x }) => basicSalaryChangeHandler(x.toString())}\n        styles={{\n          track: {\n            width: \"100%\",\n            backgroundColor: `${colors.darkGray}`,\n            height: 15,\n            borderRadius: 10,\n            boxShadow: `${styling.borderShadow(0.15, \"inset\")}`\n          },\n          active: {\n            backgroundColor: `${colors.primary}`,\n            borderRadius: 10\n          },\n          thumb: {\n            cursor: \"pointer\",\n            width: 30,\n            height: 30\n          },\n          disabled: {\n            opacity: 0.5\n          }\n        }}\n      />\n    </>\n  );\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport { styling, colors } from \"./index\";\nimport { normalize } from \"polished\";\n\nconst GlobalStyle = createGlobalStyle`\n${normalize()}\n\nhtml {\n  box-sizing: border-box;\n}\n\n\n*,*:before, *:after{\n  box-sizing: inherit;\n  font-family: ${styling.typography.fontFamily}\n}\n\nbody {\n  background:  ${colors.lightGray};\n}\n\nh1, h2, h3, p {\n  margin: 0;\n  padding: 0;\n}\n\n::selection{\n  background: ${colors.primary};\n  color: ${colors.white}\n}\n\ninput, select{\n  font-weight: 400  !important;\n  font-size: 19px;\n}\n\n\n.CalendarDay__selected,\n.CalendarDay__selected:active,\n.CalendarDay__selected:hover {\n  background: ${colors.primary} !important;\n  border: 1px solid ${colors.secondary} !important;\n}\n\n.CalendarDay__selected_span, .CalendarDay__hovered_span {\n  background: ${colors.secondary} !important;\n  border: 1px solid ${colors.white} !important;\n  color: ${colors.white} !important;\n}\n\n.DateInput_input__focused {\n  border-bottom: 2px solid ${colors.primary} !important;\n}\n\n.DateRangePickerInput, .DateRangePicker,.SingleDatePicker ,.SingleDatePickerInput{\n  width: 100% !important;\n  box-shadow: ${styling.borderShadow()};\n  height:60px;\n\n  .DateInput_input{\n    text-align: center  !important;\n    font-weight: 400  !important;\n    height: 58px;\n  }\n}\n\n.SingleDatePicker {\n  .SingleDatePickerInput{\n      display: flex;\n      \n    .DateInput{  \n      flex: 1;\n      \n    }\n  }\n}\n\n.DateRangePicker{\n  margin-bottom: 10px;\n\n  & + div{\n    /*position:absolute;*/\n    width: 100%;\n    text-align: center;\n    font-size: ${styling.typography.fontMedSize};\n  }\n}\n\n.DateRangePicker{\n  .DateRangePickerInput{\n    display: flex;\n    align-items: center;\n\n    .DateInput{\n      flex: 1;\n    }\n  }\n} \n`;\n\nexport default GlobalStyle;\n","import moment from \"moment\";\n\nexport default () =>\n  moment.updateLocale(\"sv\", {\n    months: [\n      \"Januari\",\n      \"Februari\",\n      \"Mars\",\n      \"April\",\n      \"Maj\",\n      \"Juni\",\n      \"Juli\",\n      \"Augusti\",\n      \"September\",\n      \"Oktober\",\n      \"November\",\n      \"December\"\n    ],\n    monthsShort: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"Maj\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Okt\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    weekdays: [\n      \"Måndag\",\n      \"Tisdag\",\n      \"Onsdag\",\n      \"Torsdag\",\n      \"Fredag\",\n      \"Lördag\",\n      \"Söndag\"\n    ],\n    weekdaysMin: [\"Mån\", \"Tis\", \"Ons\", \"Tor\", \"Fre\", \"Lör\", \"Sön\"]\n  });\n","import React from \"react\";\nimport \"react-dates/initialize\";\n\nimport { Criteria } from \"../criterias\";\nimport { PriceBase } from \"../price-base\";\nimport { SalaryInfo } from \"../salary-info\";\nimport { Card } from \"../card\";\n\nimport { localDateConfig } from \"../../utilities/config\";\n\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { Container, Row } from \"../../utilities/styles/layout\";\nimport GlobalStyles from \"../../utilities/styles/GlobalStyle\";\nimport { Title } from \"./style\";\n\n/*  moment.locale(\"sv\");*/\nlocalDateConfig();\n\nconst AppComponent: React.FC = () => {\n  return (\n    <Container>\n      <GlobalStyles />\n\n      <Title mt={30}>Vad behöver jag tänka på?</Title>\n      <Row col={2}>\n        <Criteria.EmployeeStatus />\n        <Criteria.Birthday />\n      </Row>\n\n      <Title>Prisbasbeloppet</Title>\n      <Row col={2}>\n        <PriceBase.Duration />\n        <PriceBase.BasicAmount />\n      </Row>\n\n      <SalaryInfo />\n\n      <Card />\n    </Container>\n  );\n};\n\nexport default AppComponent;\n","import { combineReducers } from \"redux\";\nimport {\n  CardReducer,\n  CriteriaReducer,\n  SalaryInfoReducer,\n  PriceBaseReducer\n} from \"../features\";\n\nexport default combineReducers({\n  critera: CriteriaReducer,\n  priceBase: PriceBaseReducer,\n  salaryInfo: SalaryInfoReducer,\n  cards: CardReducer\n});\n","import { Action } from \"redux\";\n\nexport interface ICard {\n  ConvertedBasicSalary: number;\n  max10PBB: number;\n  max15PBB: number;\n  excessFixedSalary: number;\n  parentalSalaryUpto10PBB: number;\n  parentalSalaryAbove10PBB: number;\n  total: number;\n}\n\nexport interface ICardProps {\n  loaded?: boolean;\n  cards?: ICard[];\n  compensationPeriod?: string;\n  errors?: string[];\n}\n\nexport interface IMapCardStateToProps {\n  pbb1?: number;\n  pbb2?: number;\n}\n\nexport interface CardState {\n  loaded: boolean;\n  data?: ICard[];\n}\n\n// Describing the different ACTION NAMES available\nexport const LOAD_CARD = \"LOAD_CARD\";\nexport const LOAD_CARD_SUCCESS = \"LOAD_CARD_SUCCESS\";\nexport const LOAD_CARD_FAILURE = \"LOAD_CARD_FIALURE\";\n\ninterface loadCardAction extends Action {\n  type: typeof LOAD_CARD;\n}\ninterface loadCardSuccessAction extends Action {\n  type: typeof LOAD_CARD_SUCCESS;\n  data: ICard[];\n}\ninterface loadCardFailureAction extends Action {\n  type: typeof LOAD_CARD_FAILURE;\n}\n\nexport type CardActionTypes =\n  | loadCardAction\n  | loadCardSuccessAction\n  | loadCardFailureAction;\n","import { createStore, applyMiddleware, Store, StoreEnhancer } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport thunk, {\n  ThunkMiddleware,\n  ThunkAction,\n  ThunkDispatch\n} from \"redux-thunk\";\n\nimport { dataFetching } from \"./middlewares\";\n\nimport rootReducers from \"./rootReducers\";\nimport {\n  SalaryInfoActionTypes,\n  CriteriaActionTypes,\n  PriceBaseActionTypes,\n  CardActionTypes\n} from \"../features\";\n\nconst middlewares = [\n  thunk as ThunkMiddleware<AppState, AppActions>,\n  dataFetching as ThunkMiddleware<AppState, AppActions>\n];\nconst middleWareEnhancer: StoreEnhancer = applyMiddleware(...middlewares);\n\nexport type ThunkActionType = ThunkAction<void, AppState, null, AppActions>;\nexport type ThunkDispatchType = ThunkDispatch<AppState, any, AppActions>;\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nexport type AppActions =\n  | CriteriaActionTypes\n  | PriceBaseActionTypes\n  | SalaryInfoActionTypes\n  | CardActionTypes;\n\nexport const store: Store<AppState> = createStore(\n  rootReducers,\n  composeWithDevTools(middleWareEnhancer)\n);\n","import { MiddlewareAPI } from \"redux\";\nimport { ThunkDispatchType, AppActions } from \"../..\";\nimport { LOAD_CARD, startLoadCard } from \"../../../features\";\n\nexport const dataFetching = ({\n  dispatch,\n  getState\n}: MiddlewareAPI<ThunkDispatchType>) => (next: ThunkDispatchType) => (\n  action: AppActions\n) => {\n  next(action);\n\n  if (!action.type.includes(LOAD_CARD)) {\n    return dispatch(startLoadCard());\n  }\n};\n","import { AppState, ThunkActionType, ThunkDispatchType } from \"../../store\";\nimport {\n  ICard,\n  LOAD_CARD,\n  LOAD_CARD_SUCCESS,\n  LOAD_CARD_FAILURE,\n  CardActionTypes\n} from \"./Card.types\";\nimport { setCardsData, getErrors } from \"../../store/selector\";\n\nexport const loadingCard = (): CardActionTypes => ({\n  type: LOAD_CARD\n});\n\nexport const loadedCardSuccess = (data: ICard[]): CardActionTypes => ({\n  type: LOAD_CARD_SUCCESS,\n  data\n});\n\nexport const loadedCardFailure = (): CardActionTypes => ({\n  type: LOAD_CARD_FAILURE\n});\n\nexport const startLoadCard = (): ThunkActionType => (\n  dispatch: ThunkDispatchType,\n  getState: () => AppState\n) => {\n  const data = setCardsData(getState());\n  const errors = getErrors(getState());\n\n  const { status, birthday } = getState().critera;\n  const { pbb1, duration } = getState().priceBase;\n  const { salaryModel } = getState().salaryInfo;\n\n  if (\n    status !== \"\" &&\n    birthday &&\n    pbb1 > 0 &&\n    duration.startDate &&\n    duration.endDate &&\n    salaryModel !== \"\"\n  ) {\n    dispatch(loadingCard());\n\n    setTimeout(() => {\n      if (errors && errors.length > 0) {\n        return dispatch(loadedCardFailure());\n      }\n      dispatch(loadedCardSuccess(data));\n    }, 700);\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\n\nimport { App } from \"./features\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}